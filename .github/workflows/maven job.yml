# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - "feature/jefit-automation"
  pull_request:
    branches:
      - "master"

env:
  USERNAME: ${{ secrets.MY_SECRET_USER }}
  PASSWORD: ${{ secrets.MY_SECRET_PASSWORD }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with Maven
        run: mvn clean test -DsuiteXmlFile='src/test/resources/suite.xml' -Duser=$USERNAME -Dpassword=$PASSWORD

      - name: Get Allure history
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages
        if: always()

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: target/allure-results
          allure_history: gh-pages/allure-history
        if: always()

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages/allure-history
        if: always()